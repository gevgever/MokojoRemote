//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Mokojo.RemoteClient.RemoteControlClient {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteCommand", Namespace="http://schemas.datacontract.org/2004/07/Mokojo.RemoteServer")]
    [System.SerializableAttribute()]
    public partial class RemoteCommand : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CommandStringField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime StartTimeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CommandString {
            get {
                return this.CommandStringField;
            }
            set {
                if ((object.ReferenceEquals(this.CommandStringField, value) != true)) {
                    this.CommandStringField = value;
                    this.RaisePropertyChanged("CommandString");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime StartTime {
            get {
                return this.StartTimeField;
            }
            set {
                if ((this.StartTimeField.Equals(value) != true)) {
                    this.StartTimeField = value;
                    this.RaisePropertyChanged("StartTime");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="RemoteControlClient.RemoteControl")]
    public interface RemoteControl {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteControl/Do", ReplyAction="http://tempuri.org/RemoteControl/DoResponse")]
        void Do(Mokojo.RemoteClient.RemoteControlClient.RemoteCommand i_remoteCommand);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/RemoteControl/CountPendingCommands", ReplyAction="http://tempuri.org/RemoteControl/CountPendingCommandsResponse")]
        int CountPendingCommands();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface RemoteControlChannel : Mokojo.RemoteClient.RemoteControlClient.RemoteControl, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class RemoteControlClient : System.ServiceModel.ClientBase<Mokojo.RemoteClient.RemoteControlClient.RemoteControl>, Mokojo.RemoteClient.RemoteControlClient.RemoteControl {
        
        public RemoteControlClient() {
        }
        
        public RemoteControlClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public RemoteControlClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteControlClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public RemoteControlClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void Do(Mokojo.RemoteClient.RemoteControlClient.RemoteCommand i_remoteCommand) {
            base.Channel.Do(i_remoteCommand);
        }
        
        public int CountPendingCommands() {
            return base.Channel.CountPendingCommands();
        }
    }
}
